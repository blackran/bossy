{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","Auth","lazy","Lecons","Exercices","Details","LireDocument","Confirmation","App","isAuth","sessionStorage","getItem","className","fallback","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAMAA,IAAMC,SAASC,QAAU,GAGzB,IAAMC,EAAOC,gBAAK,kBAAM,+DAClBC,EAASD,gBAAK,kBAAM,8DACpBE,EAAYF,gBAAK,kBAAM,8DACvBG,EAAUH,gBAAK,kBAAM,8DACrBI,EAAeJ,gBAAK,kBAAM,iCAC1BK,EAAeL,gBAAK,kBAAM,8DAoCjBM,MAlCf,WACE,IAAIC,GAAS,EAMb,OALcC,eAAeC,QAAQ,WAGnCF,GAAS,GAGT,cAAC,IAAD,UACE,qBAAKG,UAAU,MAAf,SACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,cAAC,IAAD,CAAOc,KAAK,gBAAgBC,UAAWT,IAErCE,EACE,qCACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,UAAWb,IACvC,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,aAAaC,UAAWZ,IAC1C,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,eAAeC,UAAWX,IAC5C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,oBAAoBC,UAAWV,OAGrD,cAAC,IAAD,CAAUW,GAAG,MAGf,cAAC,IAAD,CAAOD,UAAWf,cC9BfiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.458d2570.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport './App.css';\n\n// axios.defaults.baseURL = 'http://localhost:5000';\naxios.defaults.baseURL = '';\n\n\nconst Auth = lazy(() => import('./pages/Auth'));\nconst Lecons = lazy(() => import('./pages/Lecons'));\nconst Exercices = lazy(() => import('./pages/Exercices'));\nconst Details = lazy(() => import('./pages/Details'));\nconst LireDocument = lazy(() => import('./pages/LireDocument'));\nconst Confirmation = lazy(() => import('./pages/Auth/Confirmation'));\n\nfunction App() {\n  let isAuth = false;\n  const token = sessionStorage.getItem('token');\n  // console.log('token', token);\n  if (token) {\n    isAuth = true;\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={Auth} />\n            <Route path=\"/Confirmation\" component={Confirmation} />\n            {\n              isAuth? (\n                <>\n                  <Route exact path=\"/Lecons\" component={Lecons} />\n                  <Route exact path=\"/Exercices\" component={Exercices} />\n                  <Route exact path=\"/Details=:id\" component={Details} />\n                  <Route exact path=\"/LireDocument=:id\" component={LireDocument} />\n                </>\n              ): (\n              <Redirect to=\"/\" />\n              )\n            }\n            <Route component={Auth} />\n          </Switch>\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}