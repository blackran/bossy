{"version":3,"sources":["App.js"],"names":["axios","defaults","baseURL","Auth","lazy","Lecons","Exercices","Details","LireDocument","Confirmation","PrivateRoute","isAuth","Component","component","rest","sessionStorage","hasOwnProperty","render","props","to","App","className","fallback","exact","path"],"mappings":"sMAKAA,IAAMC,SAASC,QAAU,wBAIzB,IAAMC,EAAOC,gBAAK,kBAAM,8DAClBC,EAASD,gBAAK,kBAAM,6DACpBE,EAAYF,gBAAK,kBAAM,8DACvBG,EAAUH,gBAAK,kBAAM,8DACrBI,EAAeJ,gBAAK,kBAAM,iCAC1BK,EAAeL,gBAAK,kBAAM,+DAsBhC,IAAMM,EAAe,SAAC,GAAuC,IACvDC,EAD6BC,EAAyB,EAApCC,UAAyBC,EAAW,iBAI1D,OAFAH,EAASI,eAAeC,eAAe,SAEhC,cAAC,IAAD,2BACDF,GADC,IAELG,OAAQ,SAAAC,GAAK,OACXP,EACE,cAACC,EAAD,eAAeM,IACb,cAAC,IAAD,CAAUC,GAAI,WAKTC,UAlCf,SAAaF,GACX,OACE,cAAC,IAAD,UACE,qBAAKG,UAAU,MAAf,SACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIX,UAAWV,IACjC,cAAC,IAAD,CAAOqB,KAAK,gBAAgBX,UAAWJ,IACvC,cAACC,EAAD,CAAca,OAAK,EAACC,KAAK,UAAUX,UAAWR,IAC9C,cAACK,EAAD,CAAca,OAAK,EAACC,KAAK,aAAaX,UAAWP,IACjD,cAACI,EAAD,CAAca,OAAK,EAACC,KAAK,eAAeX,UAAWN,IACnD,cAACG,EAAD,CAAca,OAAK,EAACC,KAAK,oBAAoBX,UAAWL,IACxD,cAAC,IAAD,CAAOK,UAAWV,e","file":"static/js/11.89c0f813.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport './App.css';\n\naxios.defaults.baseURL = 'http://localhost:5000';\n// axios.defaults.baseURL = '';\n\n\nconst Auth = lazy(() => import('./pages/Auth'));\nconst Lecons = lazy(() => import('./pages/Lecons'));\nconst Exercices = lazy(() => import('./pages/Exercices'));\nconst Details = lazy(() => import('./pages/Details'));\nconst LireDocument = lazy(() => import('./pages/LireDocument'));\nconst Confirmation = lazy(() => import('./pages/Auth/Confirmation'));\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={Auth} />\n            <Route path=\"/Confirmation\" component={Confirmation} />\n            <PrivateRoute exact path=\"/Lecons\" component={Lecons} />\n            <PrivateRoute exact path=\"/Exercices\" component={Exercices} />\n            <PrivateRoute exact path=\"/Details=:id\" component={Details} />\n            <PrivateRoute exact path=\"/LireDocument=:id\" component={LireDocument} />\n            <Route component={Auth} />\n          </Switch>\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  let isAuth = true;\n  isAuth = sessionStorage.hasOwnProperty('token');\n\n  return <Route\n    {...rest}\n    render={props =>\n      isAuth ?\n        <Component {...props} />\n        : <Redirect to={'/'} />\n    }\n  />\n}\n\nexport default App;\n"],"sourceRoot":""}